name: Fetch Hari Libur Indonesia + Prediksi

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  fetch-holidays:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install axios
          sudo apt-get install -y python3 python3-pip
          pip3 install python-dateutil

      - name: Fetch and Save Holiday Data
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          node <<'EOF'
          const fs = require('fs');
          const axios = require('axios');

          async function fetchAndFilter(year) {
            const timeMin = `${year}-01-01T00:00:00Z`;
            const timeMax = `${year}-12-31T23:59:59Z`;
            const calendarId = 'id.indonesian%23holiday@group.v.calendar.google.com';
            const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?key=${process.env.GOOGLE_API_KEY}&timeMin=${timeMin}&timeMax=${timeMax}&orderBy=startTime&singleEvents=true`;

            const { data } = await axios.get(url);
            const items = data.items;

            const waisakYear = year + 544;
            const hijriyahYear = year - 579;
            const imlekYear = year + 551;
            const hijriahMuharam = year - 578;
            const proklamasiKe = year - 1945;

            const keywords = {
              'Hari Tahun Baru': `Tahun Baru ${year}`,
              'Satu Muharam / Tahun Baru Hijriah': `Tahun Baru Islam ${hijriahMuharam} Hijriyah`,
              'Tahun Baru Imlek': `Tahun Baru Imlek ${imlekYear} Kongzili`,
              'Hari Raya Waisak': `Hari Raya Waisak ${waisakYear}`,
              'Cuti Bersama Tahun Baru Imlek': 'Cuti Imlek',
              'Isra Mikraj Nabi Muhammad': 'Isra Mikraj Nabi Muhammad',
              'Hari Suci Nyepi (Tahun Baru Saka)': 'Nyepi',
              'Cuti Bersama Hari Suci Nyepi (Tahun Baru Saka)': 'Cuti Nyepi',
              'Maulid Nabi Muhammad': 'Maulid Nabi Muhammad',
              'Kenaikan Isa': 'Kenaikan Isa Almasih',
              'Wafat Isa Almasih': 'Wafat Isa Almasih',
              'Ramadan Start': 'Awal Ramadan',
              'Cuti Bersama Idul Fitri': 'Cuti Idul Fitri',
              'Hari Idul Fitri': `Hari Raya Idul Fitri ${hijriyahYear} Hijriyah`,
              'Hari Buruh Internasional / Pekerja': 'Hari Buruh',
              'Hari Lahir Pancasila': 'Hari Pancasila',
              'Cuti Bersama Waisak': 'Cuti Waisak',
              'Idul Adha (Lebaran Haji)': `Hari Raya Idul Adha ${hijriyahYear} Hijriyah`,
              'Hari Proklamasi Kemerdekaan R.I.': `Proklamasi Kemerdekaan Ke-${proklamasiKe}`,
              'Hari Raya Natal': 'Natal',
              'Cuti Bersama Natal (Hari Tinju)': 'Cuti Natal',
            };

            const output = [];

            for (const item of items) {
              const summary = item.summary || '';
              const tanggal = item.start?.date || '';
              for (const key in keywords) {
                if (summary.includes(key)) {
                  output.push({
                    Keterangan: keywords[key],
                    Tanggal: tanggal
                  });
                  break;
                }
              }
            }

            if (!fs.existsSync('data')) fs.mkdirSync('data');
            fs.writeFileSync(`data/${year}.json`, JSON.stringify(output, null, 2));
            return output;
          }

          const thisYear = new Date().getFullYear();
          const nextYear = thisYear + 1;

          const thisYearData = await fetchAndFilter(thisYear);
          const nextYearData = await fetchAndFilter(nextYear);

          // Jika tahun depan kosong, simpan info untuk python
          if (nextYearData.length === 0) {
            fs.writeFileSync('temp_prev.json', JSON.stringify(thisYearData));
            fs.writeFileSync('temp_year.txt', nextYear.toString());
          }
          EOF

      - name: Predict next year if empty
        if: ${{ success() }}
        run: |
          if [ -f temp_prev.json ]; then
            python3 <<EOF
import json
from datetime import datetime, timedelta
from dateutil.parser import parse

# Load previous year data and target year
with open("temp_prev.json") as f:
    data = json.load(f)

with open("temp_year.txt") as f:
    next_year = int(f.read().strip())

prediksi = []
for event in data:
    tgl = parse(event["Tanggal"])
    if tgl.year < next_year - 1: continue
    # Acak 1 hari mundur untuk membuat simulasi prediksi
    new_date = tgl.replace(year=next_year)
    prediksi.append({
        "Keterangan": f"{event['Keterangan']} (belum pasti)",
        "Tanggal": new_date.strftime('%Y-%m-%d')
    })

with open(f"data/{next_year}.json", "w") as out:
    json.dump(prediksi, out, indent=2)
print(f"ðŸ”® Prediksi {len(prediksi)} tanggal ditulis ke data/{next_year}.json")
EOF
          fi

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add data/*.json
          git diff --cached --quiet || git commit -m "Update/predict hari libur tahun depan"
          git push
