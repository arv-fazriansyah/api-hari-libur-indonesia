name: Fetch Hari Libur Google Calendar

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # Tiap Senin jam 00:00 UTC

jobs:
  fetch-holidays:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install axios
        run: npm install axios

      - name: Fetch & Filter Hari Libur
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          node <<'EOF'
          const fs = require('fs');
          const axios = require('axios');

          async function fetchRawEvents(year) {
            const timeMin = `${year}-01-01T00:00:00Z`;
            const timeMax = `${year}-12-31T23:59:59Z`;
            const calendarId = 'id.indonesian%23holiday@group.v.calendar.google.com';
            const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?key=${process.env.GOOGLE_API_KEY}&timeMin=${timeMin}&timeMax=${timeMax}&orderBy=startTime&singleEvents=true`;

            const { data } = await axios.get(url);
            return data.items;
          }

          function generateHolidays(year, rawEvents, fallback = []) {
            const keywords = {
              'Hari Tahun Baru': `Tahun Baru ${year}`,
              'Satu Muharam / Tahun Baru Hijriah': `Tahun Baru Islam ${year - 578} Hijriyah`,
              'Tahun Baru Imlek': `Tahun Baru Imlek ${year + 551} Kongzili`,
              'Hari Raya Waisak': `Hari Raya Waisak ${year + 544}`,
              'Cuti Bersama Tahun Baru Imlek': 'Cuti Imlek',
              'Isra Mikraj Nabi Muhammad': 'Isra Mikraj Nabi Muhammad',
              'Hari Suci Nyepi (Tahun Baru Saka)': 'Nyepi',
              'Cuti Bersama Hari Suci Nyepi (Tahun Baru Saka)': 'Cuti Nyepi',
              'Maulid Nabi Muhammad': 'Maulid Nabi Muhammad',
              'Kenaikan Isa': 'Kenaikan Isa Almasih',
              'Wafat Isa Almasih': 'Wafat Isa Almasih',
              'Ramadan Start': 'Awal Ramadan',
              'Cuti Bersama Idul Fitri': 'Cuti Idul Fitri',
              'Hari Idul Fitri': `Hari Raya Idul Fitri ${year - 579} Hijriyah`,
              'Hari Buruh Internasional / Pekerja': 'Hari Buruh',
              'Hari Lahir Pancasila': 'Hari Pancasila',
              'Cuti Bersama Waisak': 'Cuti Waisak',
              'Idul Adha (Lebaran Haji)': `Hari Raya Idul Adha ${year - 579} Hijriyah`,
              'Hari Proklamasi Kemerdekaan R.I.': `Proklamasi Kemerdekaan Ke-${year - 1945}`,
              'Hari Raya Natal': 'Natal',
              'Cuti Bersama Natal (Hari Tinju)': 'Cuti Natal',
            };

            const result = [];

            for (const event of rawEvents) {
              for (const key in keywords) {
                if (event.summary.includes(key)) {
                  result.push({
                    Keterangan: keywords[key],
                    Tanggal: event.start.date
                  });
                  break;
                }
              }
            }

            // Jika data kosong, buat prediksi berdasarkan tahun sebelumnya (fallback)
            if (result.length === 0 && fallback.length > 0) {
              const movable = [
                'Isra Mikraj Nabi Muhammad',
                'Awal Ramadan',
                'Hari Raya Idul Fitri',
                'Cuti Idul Fitri',
                'Hari Raya Idul Adha',
                'Tahun Baru Islam',
                'Maulid Nabi Muhammad',
                'Nyepi',
                'Cuti Nyepi',
                'Cuti Natal',
              ];

              const prediksi = fallback.filter(ev =>
                movable.some(m => ev.Keterangan.includes(m))
              ).map(ev => {
                const date = new Date(ev.Tanggal);
                date.setFullYear(year); // prediksi dengan tanggal yang sama di tahun depan

                return {
                  Keterangan: ev.Keterangan + ' (belum pasti)',
                  Tanggal: date.toISOString().split('T')[0]
                };
              });

              return prediksi;
            }

            return result;
          }

          const thisYear = new Date().getFullYear();
          const nextYear = thisYear + 1;

          (async () => {
            const thisEvents = await fetchRawEvents(thisYear);
            const nextEvents = await fetchRawEvents(nextYear);

            const thisData = generateHolidays(thisYear, thisEvents);
            const nextData = generateHolidays(nextYear, nextEvents, thisData);

            const folder = 'data';
            if (!fs.existsSync(folder)) fs.mkdirSync(folder);

            fs.writeFileSync(`${folder}/${thisYear}.json`, JSON.stringify(thisData, null, 2));
            fs.writeFileSync(`${folder}/${nextYear}.json`, JSON.stringify(nextData, null, 2));
            console.log(`✅ Simpan ke data/${thisYear}.json (${thisData.length})`);
            console.log(`✅ Simpan ke data/${nextYear}.json (${nextData.length})`);
          })();
          EOF

      - name: Commit dan Push jika ada perubahan
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/*.json
          git diff --cached --quiet || git commit -m "Update data hari libur nasional terbaru (auto & prediksi)"
          git push
